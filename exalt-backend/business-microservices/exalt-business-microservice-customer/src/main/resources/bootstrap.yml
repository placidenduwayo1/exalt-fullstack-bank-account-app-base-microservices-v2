spring:
  application:
    name: ${APPLICATION_NAME6}

  main:
    banner-mode: off
  cloud:
    config:
      uri: http://${CONFIGURATION_SERVER_HOST}:${CONFIGURATION_SERVER_PORT}

  datasource:
    url: jdbc:mysql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME3}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}

  kafka:
    producer:
      bootstrap-servers: http://kafka-server1:19092
      key-serializer: ${KAFKA_KEY_SERIALIZER}
      value-serializer: ${KAFKA_VALUE_SERIALIZER}
      properties:
        spring:
          json:
            add:
              type:
                headers: false
    consumer:
      bootstrap-servers: http://kafka-server1:19092
      key-deserializer: ${KAFKA_KEY_DESERIALIZER}
      value-deserializer: ${KAFKA_VALUE_DESERIALIZER}
      properties:
        specific:
          avro:
            reader: true

    properties:
      schema:
        registry:
          url: http://schema-registry-service:8081

  flyway:
    enabled=: true
    baseline-on-migrate: true
    baseline-version: 0
    user: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}

rsa:
  rsa-public-key: classpath:certs/publicKey.pem

kafka:
  topic:
    name: ${KAFKA_APPLICATION_TOPIC_NAME010}

topic:
  retention: ${KAFKA_APPLICATION_TOPIC_RETENTION}

server:
  port: ${SERVER_PORT6}

management:
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: health
  endpoint:
    health:
      enabled: true
      show-components: always
      probes:
        enabled: true # enable /actuator/health/liveness and /actuator/health/readiness for K8s