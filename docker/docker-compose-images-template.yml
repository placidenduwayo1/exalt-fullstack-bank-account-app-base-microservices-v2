services:

  bank-account-app-apis-dbs:
    image: mysql:8.0
    container_name: ${DATABASE_HOST}
    ports:
      - ${DATABASE_PORT}:${DATABASE_PORT}
    environment:
      MYSQL_ROOT_PASSWORD: "${DATABASE_PASSWORD}"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "${SERVER_ADDRESS}", "-u${DATABASE_USERNAME}", "-p${DATABASE_PASSWORD}" ]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 20s
    volumes:
      - bank_account_app_apis_volumes:/var/lib/mysql
      - ./mss-databases:/docker-entrypoint-initdb.d
    networks:
      - bank-account-apis

  ##-------------- kafka infrastructure -------------------
  zookeeper-server:
    image: zookeeper:3.4.9
    container_name: zookeeper-server
    ports:
      - 2181:2181
    networks:
      - bank-account-apis
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: no

  kafka-server1:
    image: obsidiandynamics/kafka
    container_name: kafka-server1
    networks:
      - bank-account-apis
    ports:
      - 9092:9092
      - 19092:19092
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-server:2181
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:19092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-server1:19092,PLAINTEXT_HOST://localhost:9092
    depends_on:
      zookeeper-server:
        condition: service_healthy
    healthcheck:
      test: nc -z localhost 19092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    restart: always

  kafka-server2:
    image: obsidiandynamics/kafka
    container_name: kafka-server2
    networks:
      - bank-account-apis
    ports:
      - 9093:9093
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-server:2181
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:29092,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-server2:29092,PLAINTEXT_HOST://localhost:9093
    depends_on:
      zookeeper-server:
        condition: service_healthy
    healthcheck:
      test: nc -z localhost 29092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    restart: no

  schema-registry-service:
    image: confluentinc/cp-schema-registry:5.4.0
    container_name: schema-registry-service
    depends_on:
      kafka-server1:
        condition: service_healthy
      kafka-server2:
        condition: service_healthy
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry-service
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka-server1:19092,kafka-server2:29092
    networks:
      - bank-account-apis
    restart: no

  kafka-UI:
    container_name: kafka-UI
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka-cluster1
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-server1:19092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry-service:8081
      KAFKA_CLUSTERS_1_NAME: kafka-cluster2
      KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS: kafka-server2:29092
      KAFKA_CLUSTERS_1_METRICS_PORT: 9998
      KAFKA_CLUSTERS_1_SCHEMAREGISTRY: http://schema-registry-service:8081
      DYNAMIC_CONFIG_ENABLED: 'true'
    depends_on:
      kafka-server1:
        condition: service_healthy
      kafka-server2:
        condition: service_healthy
    networks:
      - bank-account-apis
    restart: no

#  ---------------- transverse microservices---------------------
  exalt-microservices-configuration-server:
    image: placidenduwayo1/${APPLICATION_NAME1}:1.0.0
    container_name: ${APPLICATION_NAME1}
    build:
      context: ../exalt-backend/utils-microservices/exalt-microservices-configuration-server
      dockerfile: Dockerfile
    ports:
      - ${SERVER_PORT1}:${SERVER_PORT1}
    networks:
      - bank-account-apis
    healthcheck:
      test: [ "CMD", "curl", "-I", "http://${APPLICATION_NAME1}:${SERVER_PORT1}" ]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: no
    environment:
      APPLICATION_NAME1: "${APPLICATION_NAME1}"
      CLOUD_CONFIG_SERVER_GIT_URI: "${CLOUD_CONFIG_SERVER_GIT_URI}"
      CLOUD_CONFIG_SERVER_GIT_DEFAULT_LABEL: "${CLOUD_CONFIG_SERVER_GIT_DEFAULT_LABEL}"
      CLOUD_CONFIG_SERVER_GIT_PATHS: "${CLOUD_CONFIG_SERVER_GIT_PATHS}"
      CLOUD_CONFIG_SERVER_GIT_USERNAME: "${CLOUD_CONFIG_SERVER_GIT_USERNAME}"
      CLOUD_CONFIG_SERVER_GIT_PASSWORD: "${CLOUD_CONFIG_SERVER_GIT_PASSWORD}"
      SERVER_PORT1: "${SERVER_PORT1}"

  exalt-microservices-registration-server:
    image: placidenduwayo1/${APPLICATION_NAME2}:1.0.0
    container_name: ${APPLICATION_NAME2}
    build:
      context: ../exalt-backend/utils-microservices/exalt-microservices-registration-server
      dockerfile: Dockerfile
    ports:
      - ${SERVER_PORT2}:${SERVER_PORT2}
    networks:
      - bank-account-apis
    healthcheck:
      test: [ "CMD", "curl", "-I", "http://${APPLICATION_NAME2}:${SERVER_PORT2}" ]
      interval: 15s
      timeout: 10s
      retries: 3
    restart: no
    environment:
      APPLICATION_NAME2: ${APPLICATION_NAME2}
      SERVER_PORT2: ${SERVER_PORT2}
      CONFIGURATION_SERVER_HOST: ${CONFIGURATION_SERVER_HOST}
      CONFIGURATION_SERVER_PORT: ${CONFIGURATION_SERVER_PORT}
    depends_on:
      exalt-microservices-configuration-server:
        condition: service_healthy

  exalt-gateway-service-proxy:
    image: placidenduwayo1/${APPLICATION_NAME3}:1.0.0
    container_name: ${APPLICATION_NAME3}
    build:
      context: ../exalt-backend/utils-microservices/exalt-gateway-service-proxy
      dockerfile: Dockerfile
    ports:
      - ${SERVER_PORT3}:${SERVER_PORT3}
    depends_on:
      exalt-microservices-configuration-server:
        condition: service_healthy
    networks:
      - bank-account-apis
    restart: no
    environment:
      APPLICATION_NAME3: "${APPLICATION_NAME3}"
      CONFIGURATION_SERVER_HOST: "${CONFIGURATION_SERVER_HOST}"
      CONFIGURATION_SERVER_PORT: "${CONFIGURATION_SERVER_PORT}"
      GATEWAY_ROUTE_ID1: "${GATEWAY_ROUTE_ID1}"
      GATEWAY_ROUTE_URI1: "${GATEWAY_ROUTE_URI1}"
      GATEWAY_ROUTE_ID2: "${GATEWAY_ROUTE_ID2}"
      GATEWAY_ROUTE_URI2: "${GATEWAY_ROUTE_URI2}"
      GATEWAY_ROUTE_ID3: "${GATEWAY_ROUTE_ID3}"
      GATEWAY_ROUTE_URI3: "${GATEWAY_ROUTE_URI3}"
      GATEWAY_ROUTE_ID4: "${GATEWAY_ROUTE_ID4}"
      GATEWAY_ROUTE_URI4: "${GATEWAY_ROUTE_URI4}"
      SERVER_PORT3: "${SERVER_PORT3}"

# ------------------------ spring security microservice-------------------
  exalt-business-ms-spring-security-aouth2-res-server:
    image: placidenduwayo1/${APPLICATION_NAME4}:1.0.0
    container_name: ${APPLICATION_NAME4}
    build:
      context: ../exalt-backend/security-microservice/exalt-business-ms-spring-security-aouth2-resource-server
      dockerfile: Dockerfile
    ports:
      - ${SERVER_PORT4}:${SERVER_PORT4}
    depends_on:
      exalt-microservices-configuration-server:
        condition: service_healthy
      bank-account-app-apis-dbs:
        condition: service_healthy
    networks:
      - bank-account-apis
    restart: no
    environment:
      APPLICATION_NAME4: "${APPLICATION_NAME4}"
      CONFIGURATION_SERVER_HOST: "${CONFIGURATION_SERVER_HOST}"
      CONFIGURATION_SERVER_PORT: "${CONFIGURATION_SERVER_PORT}"
      DATABASE_HOST: "${DATABASE_HOST}"
      DATABASE_PORT: "${DATABASE_PORT}"
      DATABASE_NAME1: "${DATABASE_NAME1}"
      DATABASE_USERNAME: "${DATABASE_USERNAME}"
      DATABASE_PASSWORD: "${DATABASE_PASSWORD}"
      PUBLIC_KEY: "${PUBLIC_KEY}"
      PRIVATE_KEY: "${PRIVATE_KEY}"
      SERVER_PORT4: "${SERVER_PORT4}"

#-----------------business microservices: customer, bank-account, operation---------------
  exalt-business-microservice-customer:
    image: placidenduwayo1/${APPLICATION_NAME6}:1.0.0
    container_name: ${APPLICATION_NAME6}
    build:
      context: ../exalt-backend/business-microservices/exalt-business-microservice-customer
      dockerfile: Dockerfile
    ports:
      - ${SERVER_PORT6}:${SERVER_PORT6}
    depends_on:
      exalt-microservices-configuration-server:
        condition: service_healthy
      bank-account-app-apis-dbs:
        condition: service_healthy
      kafka-server1:
        condition: service_healthy
      kafka-server2:
        condition: service_healthy
    networks:
      - bank-account-apis
    restart: no
    environment:
      APPLICATION_NAME6: "${APPLICATION_NAME6}"
      CONFIGURATION_SERVER_HOST: "${CONFIGURATION_SERVER_HOST}"
      CONFIGURATION_SERVER_PORT: "${CONFIGURATION_SERVER_PORT}"
      DATABASE_HOST: "${DATABASE_HOST}"
      DATABASE_PORT: "${DATABASE_PORT}"
      DATABASE_NAME3: "${DATABASE_NAME3}"
      DATABASE_USERNAME: "${DATABASE_USERNAME}"
      DATABASE_PASSWORD: "${DATABASE_PASSWORD}"
      KAFKA_KEY_SERIALIZER: "${KAFKA_KEY_SERIALIZER}"
      KAFKA_VALUE_SERIALIZER: "${KAFKA_VALUE_SERIALIZER}"
      KAFKA_KEY_DESERIALIZER: "${KAFKA_KEY_DESERIALIZER}"
      KAFKA_VALUE_DESERIALIZER: "${KAFKA_VALUE_DESERIALIZER}"
      KAFKA_APPLICATION_TOPIC_NAME010: "${KAFKA_APPLICATION_TOPIC_NAME010}"
      KAFKA_APPLICATION_TOPIC_RETENTION: "${KAFKA_APPLICATION_TOPIC_RETENTION}"
      PUBLIC_KEY: "${PUBLIC_KEY}"
      SERVER_PORT6: "${SERVER_PORT6}"


  exalt-business-microservice-bank-account:
    image: placidenduwayo1/${APPLICATION_NAME5}:1.0.0
    container_name: ${APPLICATION_NAME5}
    build:
      context: ../exalt-backend/business-microservices/exalt-business-microservice-bankaccount
      dockerfile: Dockerfile
    ports:
      - ${SERVER_PORT5}:${SERVER_PORT5}
    depends_on:
      exalt-microservices-configuration-server:
        condition: service_healthy
      bank-account-app-apis-dbs:
        condition: service_healthy
      kafka-server1:
        condition: service_healthy
      kafka-server2:
        condition: service_healthy
    networks:
      - bank-account-apis
    restart: no
    environment:
      APPLICATION_NAME5: "${APPLICATION_NAME5}"
      CONFIGURATION_SERVER_HOST: "${CONFIGURATION_SERVER_HOST}"
      CONFIGURATION_SERVER_PORT: "${CONFIGURATION_SERVER_PORT}"
      DATABASE_HOST: "${DATABASE_HOST}"
      DATABASE_PORT: "${DATABASE_PORT}"
      DATABASE_NAME2: "${DATABASE_NAME2}"
      DATABASE_USERNAME: "${DATABASE_USERNAME}"
      DATABASE_PASSWORD: "${DATABASE_PASSWORD}"
      KAFKA_KEY_SERIALIZER: "${KAFKA_KEY_SERIALIZER}"
      KAFKA_VALUE_SERIALIZER: "${KAFKA_VALUE_SERIALIZER}"
      KAFKA_KEY_DESERIALIZER: "${KAFKA_KEY_DESERIALIZER}"
      KAFKA_VALUE_DESERIALIZER: "${KAFKA_VALUE_DESERIALIZER}"
      KAFKA_APPLICATION_TOPIC_NAME000: "${KAFKA_APPLICATION_TOPIC_NAME000}"
      KAFKA_APPLICATION_TOPIC_NAME001: "${KAFKA_APPLICATION_TOPIC_NAME001}"
      KAFKA_APPLICATION_TOPIC_RETENTION: "${KAFKA_APPLICATION_TOPIC_RETENTION}"
      PUBLIC_KEY: "${PUBLIC_KEY}"
      SERVER_PORT5: "${SERVER_PORT5}"

  exalt-business-microservice-operation:
    image: placidenduwayo1/${APPLICATION_NAME7}:1.0.0
    container_name: ${APPLICATION_NAME7}
    build:
      context: ../exalt-backend/business-microservices/exalt-business-microservice-operation
      dockerfile: Dockerfile
    ports:
      - ${SERVER_PORT7}:${SERVER_PORT7}
    depends_on:
      exalt-microservices-configuration-server:
        condition: service_healthy
      bank-account-app-apis-dbs:
        condition: service_healthy
      kafka-server1:
        condition: service_healthy
      kafka-server2:
        condition: service_healthy
    networks:
      - bank-account-apis
    restart: no
    environment:
      APPLICATION_NAME7: "${APPLICATION_NAME7}"
      SERVER_PORT7: "${SERVER_PORT7}"
      CONFIGURATION_SERVER_HOST: "${CONFIGURATION_SERVER_HOST}"
      CONFIGURATION_SERVER_PORT: "${CONFIGURATION_SERVER_PORT}"
      DATABASE_HOST: "${DATABASE_HOST}"
      DATABASE_PORT: "${DATABASE_PORT}"
      DATABASE_NAME4: "${DATABASE_NAME4}"
      DATABASE_USERNAME: "${DATABASE_USERNAME}"
      DATABASE_PASSWORD: "${DATABASE_PASSWORD}"
      KAFKA_KEY_SERIALIZER: "${KAFKA_KEY_SERIALIZER}"
      KAFKA_VALUE_SERIALIZER: "${KAFKA_VALUE_SERIALIZER}"
      KAFKA_KEY_DESERIALIZER: "${KAFKA_KEY_DESERIALIZER}"
      KAFKA_VALUE_DESERIALIZER: "${KAFKA_VALUE_DESERIALIZER}"
      KAFKA_APPLICATION_TOPIC_NAME011: "${KAFKA_APPLICATION_TOPIC_NAME011}"
      KAFKA_APPLICATION_TOPIC_NAME100: "${KAFKA_APPLICATION_TOPIC_NAME100}"
      KAFKA_APPLICATION_TOPIC_RETENTION: "${KAFKA_APPLICATION_TOPIC_RETENTION}"
      PUBLIC_KEY: "${PUBLIC_KEY}"

  exalt-bank-account-app-frontend-angular:
    image: placidenduwayo1/${APPLICATION_NAME8}:1.0.0
    container_name: ${APPLICATION_NAME8}
    build:
       context: ../exalt-frontend
       dockerfile: Dockerfile
    ports:
      - 4200:${SERVER_PORT8}
    networks:
      - bank-account-apis
    restart: no
    environment:
      APPLICATION_NAME8: ${APPLICATION_NAME8}
      SERVER_PORT8: ${SERVER_PORT8}

networks:
  bank-account-apis:
volumes:
  bank_account_app_apis_volumes: